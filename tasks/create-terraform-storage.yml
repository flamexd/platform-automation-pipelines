---
platform: linux

params:
  AZURE_CLOUD_TYPE: AzureUSGovernment
  AZURE_SUBSCRIPTION_ID:
  AZURE_TENANT_ID:
  AZURE_CLIENT_ID:
  AZURE_CLIENT_SECRET:
  AZURE_RESOURCE_GROUP:
  AZURE_LOCATION:
  # - ^AZURE_* variables
  # - AZ CLI details
  CREDHUB_SERVER:
  CREDHUB_CA_CERT:
  CREDHUB_CLIENT:
  CREDHUB_SECRET:
  # - ^CREDHUB_* variables
  # - Credhub connection details
  PREFIX:
  # - Prefix to credential in credhub
  FOUNDATION:

run:
  path: bash
  args:
  - "-c"
  - |
    function login() {
      local client_id="${1}"
      local client_secret="${2}"
      local tenant_id="${3}"
      local cloud_type="${4}"
      local subscription_id="${5}"

      az cloud set \
        --name "${cloud_type}"

      az account set \
        --subscription "${subscription_id}"
      
      az login \
        --service-principal \
        --username "${client_id}" \
        --password "${client_secret}" \
        --tenant "${tenant_id}"
    }

    function create_resource_group() {
      local resource_group="${1}"
      local location="${2}"

      az group create \
        --name "${resource_group}" \
        --location "${location}"
    }

    function generate_storage_credentials() {
      local credhub_prefix="${1}"
      local account_suffix="$(openssl rand -base64 500 | tr -dc 'a-z0-9' | fold -w 12 | head -n 1)"
      local account_prefix="terraform"
      local account_fullname="${account_prefix}${account_suffix}"
      local storage_account="terraform_azure_blob"
      local storage_account_key="$(az storage account keys list --account-name ${account_fullname} --query "[].value | [0]")"

      credhub generate \
        --type user \
        --name "${credhub_prefix}/${storage_account}" \
        --username "${account_fullname}" \
        --password "${storage_account_key}"
    }

    function create_storage_account() {
      local account_suffix="$(openssl rand -base64 500 | tr -dc 'a-z0-9' | fold -w 12 | head -n 1)"
      local account_prefix="terraform"
      local account_fullname="${account_prefix}${account_suffix}"
      local storage_account="terraform_azure_blob"
      local storage_account_key="$(az storage account keys list --account-name ${account_fullname} --query "[].value | [0]")"
      local resource_group="${1}"
      local location="${2}"

      az storage account create \
        --name "${account_fullname}" \
        --resource-group "${resource_group}" \
        --location "${location}"

      az storage container create \
        --name "${account_prefix}" \
        --account-key ${storage_account_key} \
        --account-name ${account_fullname}
    }

    if [[ "${FOUNDATION}" =~ "sbx" ]] ; then
      login "${AZURE_CLIENT_ID}" "${AZURE_CLIENT_SECRET}" "${AZURE_TENANT_ID}" "${AZURE_CLOUD_TYPE}" "${AZURE_SUBSCRIPTION_ID}"
      create_resource_group "${AZURE_RESOURCE_GROUP}" "${AZURE_LOCATION}"
      create_storage_account "${AZURE_RESOURCE_GROUP}" "${AZURE_LOCATION}"
      # generate_storage_credentials "${PREFIX}"
    else
      create_storage_account "${AZURE_RESOURCE_GROUP}" "${AZURE_LOCATION}"
      # generate_storage_credentials "${PREFIX}"
    fi